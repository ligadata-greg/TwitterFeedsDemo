<PMML xmlns="http://www.dmg.org/PMML-4_1" version="4.1">

        <Header copyright="LigaDATA. Copyright 2014" description="Demo">
                <Application name="Demo2" version="00.01.00"/>
        </Header>
	
        <DataDictionary numberOfFields="3">
                <DataField name="msg" displayName="msg" optype="categorical" dataType="twittermsg"/>
                <DataField name="gCtx" displayName="globalContext" optype="categorical" dataType="EnvContext"/>
                 <DataField name="parameters" displayName="parameters" dataType="container">
                        <Value value="gCtx" property="valid"/>
                        <Value value="msg" property="valid"/>
                </DataField>
                <DataField name="outputstr" displayName="outputstr" optype="categorical" dataType="string"/>
				
				<DataField name="predictedField" displayName="predictedField" optype="categorical" dataType="integer"/>
                                <DataField name="UDFSearchPath" displayName="UDFSearchPath" dataType="container">
                                        <Value value="com.ligadata.pmml.udfs.CustomUdfs" property="valid"/>
                                </DataField>
				<DataField name="tweet" displayName="tweet" optype="categorical" dataType="string"/>	
                </DataDictionary>
        <TransformationDictionary>
		
		
		<!--        get array of security  -->
			<DerivedField name="securityContainer" dataType="ArrayOfMessageContainerBase" optype="categorical">
				<Apply function="GetArray">
					<FieldRef field="gCtx"/>
					<Constant dataType="string">System.security</Constant>
				</Apply>
			</DerivedField>

			<DerivedField name="security" dataType="ArrayOfSecurity" optype="categorical">
				<Apply function="DownCastArrayMembers">
					<FieldRef field="securityContainer"/>
					<Constant dataType="mbrTypename">security</Constant>
				</Apply>
			</DerivedField>
               
			<DerivedField name="securityTermsArray" dataType="ArrayOfString" optype="categorical">
				<Apply function="ToArray">
					<Apply function="ContainerMap">
						<FieldRef field="security"/>
						<Constant dataType="ident">terms</Constant> 
					</Apply>
				</Apply>
			</DerivedField>

				<!--check count of matche -->
			<DerivedField name="securityCounts" dataType="ArrayOfInt" optype="categorical">
				<Apply function="getTokenizedCounts">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="securityTermsArray"/>
				</Apply>
			</DerivedField>
			
			<!-- check if tweet has security-->
			<DerivedField name="CheckIfSecurityMatch" dataType="boolean" optype="categorical">
                <Apply function="getTokenizedBoolean">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="securityTermsArray"/>
					<Constant dataType="int">1</Constant>
				</Apply>
            </DerivedField>
			
			
			<!--        get array of banking  -->
			
            <DerivedField name="bankingContainer" dataType="ArrayOfMessageContainerBase" optype="categorical">
				<Apply function="GetArray">
					<FieldRef field="gCtx"/>
					<Constant dataType="string">System.banking</Constant>
				</Apply>
			</DerivedField>

			<DerivedField name="banking" dataType="ArrayOfBanking" optype="categorical">
				<Apply function="DownCastArrayMembers">
					<FieldRef field="bankingContainer"/>
					<Constant dataType="mbrTypename">banking</Constant>
				</Apply>
			</DerivedField>
               
			<DerivedField name="bankingTermsArray" dataType="ArrayOfString" optype="categorical">
				<Apply function="ToArray">
					<Apply function="ContainerMap">
						<FieldRef field="banking"/>
						<Constant dataType="ident">terms</Constant> 
					</Apply>
				</Apply>
			</DerivedField>
								<!--check count of matche -->
			<DerivedField name="bankingCounts" dataType="ArrayOfInt" optype="categorical">
				<Apply function="getTokenizedCounts">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="bankingTermsArray"/>
				</Apply>
			</DerivedField>
			
								<!-- check if tweet has banking-->
			<DerivedField name="CheckIfBanking" dataType="boolean" optype="categorical">
                <Apply function="getTokenizedBoolean">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="bankingTermsArray"/>
					<Constant dataType="int">1</Constant>
				</Apply>
            </DerivedField>
			
			<!--        get array of fraud  -->
			
			<DerivedField name="fraudContainer" dataType="ArrayOfMessageContainerBase" optype="categorical">
				<Apply function="GetArray">
					<FieldRef field="gCtx"/>
					<Constant dataType="string">System.fraud</Constant>
				</Apply>
			</DerivedField>

			<DerivedField name="fraud" dataType="ArrayOfFraud" optype="categorical">
				<Apply function="DownCastArrayMembers">
					<FieldRef field="fraudContainer"/>
					<Constant dataType="mbrTypename">fraud</Constant>
				</Apply>
			</DerivedField>
               
			<DerivedField name="fraudTermsArray" dataType="ArrayOfString" optype="categorical">
				<Apply function="ToArray">
					<Apply function="ContainerMap">
						<FieldRef field="fraud"/>
						<Constant dataType="ident">terms</Constant> 
					</Apply>
				</Apply>
			</DerivedField> 

				<!--check count of matche -->
			<DerivedField name="fraudCounts" dataType="ArrayOfInt" optype="categorical">
				<Apply function="getTokenizedCounts">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="fraudTermsArray"/>
				</Apply>
			</DerivedField> 
			
			<!-- check if tweet has fraud -->
			<DerivedField name="CheckIfFraudMatch" dataType="boolean" optype="categorical">
                <Apply function="getTokenizedBoolean">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="fraudTermsArray"/>
					<Constant dataType="int">1</Constant>
				</Apply>
            </DerivedField> 
			
			<!--        get array of investment  	-->
			
			<DerivedField name="investmentContainer" dataType="ArrayOfMessageContainerBase" optype="categorical">
				<Apply function="GetArray">
					<FieldRef field="gCtx"/>
					<Constant dataType="string">System.investment</Constant>
				</Apply>
			</DerivedField>

			<DerivedField name="investment" dataType="ArrayOfInvestment" optype="categorical">
				<Apply function="DownCastArrayMembers">
					<FieldRef field="investmentContainer"/>
					<Constant dataType="mbrTypename">investment</Constant>
				</Apply>
			</DerivedField>
               
			<DerivedField name="investmentTermsArray" dataType="ArrayOfString" optype="categorical">
				<Apply function="ToArray">
					<Apply function="ContainerMap">
						<FieldRef field="investment"/>
						<Constant dataType="ident">terms</Constant> 
					</Apply>
				</Apply>
			</DerivedField> 

				<!--check count of matche -->
			<DerivedField name="investmentCounts" dataType="ArrayOfInt" optype="categorical">
				<Apply function="getTokenizedCounts">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="investmentTermsArray"/>
				</Apply>
			</DerivedField>
			
			<!-- check if tweet has Investment  -->
			<DerivedField name="CheckIfInvestmentMatch" dataType="boolean" optype="categorical">
                <Apply function="getTokenizedBoolean">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="investmentTermsArray"/>
					<Constant dataType="int">1</Constant>
				</Apply>
            </DerivedField> 
			
			
			<!--        get array of retirement  -->
			
			<DerivedField name="retirementContainer" dataType="ArrayOfMessageContainerBase" optype="categorical">
				<Apply function="GetArray">
					<FieldRef field="gCtx"/>
					<Constant dataType="string">System.retirement</Constant>
				</Apply>
			</DerivedField> 

			<DerivedField name="retirement" dataType="ArrayOfRetirement" optype="categorical">
				<Apply function="DownCastArrayMembers">
					<FieldRef field="retirementContainer"/>
					<Constant dataType="mbrTypename">retirement</Constant>
				</Apply>
			</DerivedField>
               
			<DerivedField name="retirementTermsArray" dataType="ArrayOfString" optype="categorical">
				<Apply function="ToArray">
					<Apply function="ContainerMap">
						<FieldRef field="retirement"/>
						<Constant dataType="ident">terms</Constant> 
					</Apply>
				</Apply>
			</DerivedField> -->

				<!--check count of matche -->
			<DerivedField name="retirementCounts" dataType="ArrayOfInt" optype="categorical">
				<Apply function="getTokenizedCounts">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="retirementTermsArray"/>
				</Apply>
			</DerivedField> 
			
			<!-- check if tweet has Retirement  -->
			<DerivedField name="CheckIfRetirementMatch" dataType="boolean" optype="categorical">
                <Apply function="getTokenizedBoolean">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="retirementTermsArray"/>
					<Constant dataType="int">1</Constant>
				</Apply>
            </DerivedField> 
			
			
			<!-- bankOfAmerica -->
			
		 <!-- <DerivedField name="bankOfAmericaContainer" dataType="ArrayOfMessageContainerBase" optype="categorical">
				<Apply function="GetArray">
					<FieldRef field="gCtx"/>
					<Constant dataType="string">System.bankofamerica</Constant>
				</Apply>
			</DerivedField>

			<DerivedField name="bankOfAmerica" dataType="ArrayOfbankOfAmerica" optype="categorical">
				<Apply function="DownCastArrayMembers">
					<FieldRef field="bankOfAmericaContainer"/>
					<Constant dataType="mbrTypename">bankOfAmerica</Constant>
				</Apply>
			</DerivedField>
               
			<DerivedField name="bankOfAmericaTermsArray" dataType="ArrayOfString" optype="categorical">
				<Apply function="ToArray">
					<Apply function="ContainerMap">
						<FieldRef field="bankOfAmerica"/>
						<Constant dataType="ident">terms</Constant> 
					</Apply>
				</Apply>
			</DerivedField>  -->
								<!--check count of matche -->
		<!--	<DerivedField name="bankOfAmericaCounts" dataType="ArrayOfInt" optype="categorical">
				<Apply function="getTokenizedCounts">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="bankOfAmericaTermsArray"/>
				</Apply>
			</DerivedField> -->
			
								<!-- check if tweet has bankofamerica-->
	<!--    <DerivedField name="CheckIfbankOfAmericaTermsArray" dataType="boolean" optype="categorical">
                <Apply function="getTokenizedBoolean">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="bankOfAmericaTermsArray"/>
					<Constant dataType="int">1</Constant>
				</Apply>
            </DerivedField>  -->
			
			
											<!--     get array of barclays  -->
			
        <!--    <DerivedField name="barclaysContainer" dataType="ArrayOfMessageContainerBase" optype="categorical">
				<Apply function="GetArray">
					<FieldRef field="gCtx"/>
					<Constant dataType="string">System.barclays</Constant>
				</Apply>
			</DerivedField>

			<DerivedField name="barclays" dataType="ArrayOfBarclays" optype="categorical">
				<Apply function="DownCastArrayMembers">
					<FieldRef field="barclaysContainer"/>
					<Constant dataType="mbrTypename">barclays</Constant>
				</Apply>
			</DerivedField>
               
			<DerivedField name="barclaysTermsArray" dataType="ArrayOfString" optype="categorical">
				<Apply function="ToArray">
					<Apply function="ContainerMap">
						<FieldRef field="barclays"/>
						<Constant dataType="ident">terms</Constant> 
					</Apply>
				</Apply>
			</DerivedField>  -->
									<!--check count of matche -->
		<!--	<DerivedField name="barclaysCounts" dataType="ArrayOfInt" optype="categorical">
				<Apply function="getTokenizedCounts">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="barclaysTermsArray"/>
				</Apply>
			</DerivedField>  -->
			
									<!-- check if tweet has barclays-->
		<!--	<DerivedField name="CheckIfBarclays" dataType="boolean" optype="categorical">
                <Apply function="getTokenizedBoolean">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="barclaysTermsArray"/>
					<Constant dataType="int">1</Constant>
				</Apply>
            </DerivedField> -->
			
						<!--        get array of citiGroup  -->
			
        <!--    <DerivedField name="citiGroupContainer" dataType="ArrayOfMessageContainerBase" optype="categorical">
				<Apply function="GetArray">
					<FieldRef field="gCtx"/>
					<Constant dataType="string">System.citigroup</Constant>
				</Apply>
			</DerivedField> 

			<DerivedField name="citiGroup" dataType="ArrayOfCitiGroup" optype="categorical">
				<Apply function="DownCastArrayMembers">
					<FieldRef field="citiGroupContainer"/>
					<Constant dataType="mbrTypename">citiGroup</Constant>
				</Apply>
			</DerivedField>
               
			<DerivedField name="citiGroupTermsArray" dataType="ArrayOfString" optype="categorical">
				<Apply function="ToArray">
					<Apply function="ContainerMap">
						<FieldRef field="citiGroup"/>
						<Constant dataType="ident">terms</Constant> 
					</Apply>
				</Apply>
			</DerivedField>  -->
			
								<!--check count of matche -->
		<!--	<DerivedField name="citiGroupCounts" dataType="ArrayOfInt" optype="categorical">
				<Apply function="getTokenizedCounts">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="citiGroupTermsArray"/>
				</Apply>
			</DerivedField>  -->
			
								<!-- check if tweet has citiGroup -->
		<!--	<DerivedField name="CheckIfCitiGroup" dataType="boolean" optype="categorical">
                <Apply function="getTokenizedBoolean">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="citiGroupTermsArray"/>
					<Constant dataType="int">1</Constant>
				</Apply>
            </DerivedField> -->
			
			
						<!--        get array of top20banks  -->
			
        <!--    <DerivedField name="top20banksContainer" dataType="ArrayOfMessageContainerBase" optype="categorical">
				<Apply function="GetArray">
					<FieldRef field="gCtx"/>
					<Constant dataType="string">System.top20banks</Constant>
				</Apply>
			</DerivedField>

			<DerivedField name="top20banks" dataType="ArrayOfTop20banks" optype="categorical">
				<Apply function="DownCastArrayMembers">
					<FieldRef field="top20banksContainer"/>
					<Constant dataType="mbrTypename">top20banks</Constant>
				</Apply>
			</DerivedField>
               
			<DerivedField name="top20banksTermsArray" dataType="ArrayOfString" optype="categorical">
				<Apply function="ToArray">
					<Apply function="ContainerMap">
						<FieldRef field="top20banks"/>
						<Constant dataType="ident">terms</Constant> 
					</Apply>
				</Apply>
			</DerivedField>  -->
									<!--check count of matche -->
		<!--	<DerivedField name="top20banksCounts" dataType="ArrayOfInt" optype="categorical">
				<Apply function="getTokenizedCounts">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="top20banksTermsArray"/>
				</Apply>
			</DerivedField>  -->
			
								<!-- check if tweet has top20banks -->
		<!--	<DerivedField name="CheckIfTop20banks" dataType="boolean" optype="categorical">
                <Apply function="getTokenizedBoolean">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="top20banksTermsArray"/>
					<Constant dataType="int">1</Constant>
				</Apply>
            </DerivedField> -->
			
						<!--        get array of top80banks  -->
			
         <!--   <DerivedField name="top80banksContainer" dataType="ArrayOfMessageContainerBase" optype="categorical">
				<Apply function="GetArray">
					<FieldRef field="gCtx"/>
					<Constant dataType="string">System.top80banks</Constant>
				</Apply>
			</DerivedField>

			<DerivedField name="top80banks" dataType="ArrayOfTop80banks" optype="categorical">
				<Apply function="DownCastArrayMembers">
					<FieldRef field="top80banksContainer"/>
					<Constant dataType="mbrTypename">top80banks</Constant>
				</Apply>
			</DerivedField>
               
			<DerivedField name="top80banksTermsArray" dataType="ArrayOfString" optype="categorical">
				<Apply function="ToArray">
					<Apply function="ContainerMap">
						<FieldRef field="top80banks"/>
						<Constant dataType="ident">terms</Constant> 
					</Apply>
				</Apply>
			</DerivedField>  -->
									<!--check count of matche -->
		<!--	<DerivedField name="top80banksCounts" dataType="ArrayOfInt" optype="categorical">
				<Apply function="getTokenizedCounts">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="top80banksTermsArray"/>
				</Apply>
			</DerivedField>  -->
			
								<!-- check if tweet has top80banks -->
		<!--	<DerivedField name="CheckIfTop80banks" dataType="boolean" optype="categorical">
                <Apply function="getTokenizedBoolean">
					<FieldRef field="msg.tweet"/>
					<FieldRef field="top80banksTermsArray"/>
					<Constant dataType="int">1</Constant>
				</Apply>
            </DerivedField>  -->
			
			
			<!-- Get Summary Counters cosniders all companies under one group -->
            <DerivedField name="SumCounters" dataType="Counters" optype="categorical">
                <Apply function="GetMsgContainerElseNew">
                    <FieldRef field="gCtx"/>
                    <Constant dataType="typename">SumCounters</Constant>
					<Constant dataType="string">System.Counters</Constant>
                    <FieldRef field="msg.id"/>
                </Apply>
            </DerivedField>
            

            <!-- Increments the Fraud Counter -->
            <DerivedField name="IncFraudCounter" dataType="integer" optype="categorical">
                <Apply function="+">
                    <FieldRef field="SumCounters.fraudcounter"/>
                    <Constant dataType="integer">1</Constant>
                </Apply>
            </DerivedField>

            <!-- Increments the Security Counter -->
            <DerivedField name="IncSecurityCounter" dataType="integer" optype="categorical">
                <Apply function="+">
                    <FieldRef field="SumCounters.securitycounter"/>
                    <Constant dataType="integer">1</Constant>
                </Apply>
            </DerivedField>
            
            <!-- Increments the Investment Counter -->
            <DerivedField name="IncInvestmentCounter" dataType="integer" optype="categorical">
                <Apply function="+">
                    <FieldRef field="SumCounters.investmentcounter"/>
                    <Constant dataType="integer">1</Constant>
                </Apply>
            </DerivedField>


            <!-- Increments the Retirement Counter -->
            <DerivedField name="IncRetirementCounter" dataType="integer" optype="categorical">
                <Apply function="+">
                    <FieldRef field="SumCounters.retirementcounter"/>
                    <Constant dataType="integer">1</Constant>
                </Apply>
            </DerivedField>
			
			
			<DerivedField name="IncrSetSumCounters" dataType="boolean" optype="categorical">
                <Apply function="and">
					<Apply function="setField">
                        <FieldRef field="SumCounters.key"/>
                        <Constant dataType="string">0</Constant>
                    </Apply>
					<Apply function="if">
						<FieldRef field="CheckIfSecurityMatch"/>
						<Apply function="setField">
							<FieldRef field="SumCounters.securitycounter"/>
							<FieldRef field="IncSecurityCounter"/>
						</Apply>
						<Constant dataType="boolean">true</Constant>
					</Apply>
					
					 <Apply function="if">
						<FieldRef field="CheckIfFraudMatch"/>
						<Apply function="setField">
							<FieldRef field="SumCounters.fraudcounter"/>
							<FieldRef field="IncFraudCounter"/>
						</Apply>
						<Constant dataType="boolean">true</Constant>
					</Apply>
					<Apply function="if">
						<FieldRef field="CheckIfInvestmentMatch"/>
						<Apply function="setField">
							<FieldRef field="SumCounters.investmentcounter"/>
							<FieldRef field="IncInvestmentCounter"/>
						</Apply>
						<Constant dataType="boolean">true</Constant>
					</Apply>
					<Apply function="if">
						<FieldRef field="CheckIfRetirementMatch"/>
						<Apply function="setField">
							<FieldRef field="SumCounters.retirementcounter"/>
							<FieldRef field="IncRetirementCounter"/>
						</Apply>
						<Constant dataType="boolean">true</Constant>
					</Apply>
				</Apply>
            </DerivedField>
			
			
			<!-- Save the Incremented conters to db -->
            <DerivedField name="SaveIncrSetSumCounters" dataType="boolean" optype="categorical">
                <Apply function="Put">
                    <FieldRef field="gCtx"/>
                    <Constant dataType="string">System.Counters</Constant>
                    <FieldRef field="SumCounters.key"/>
                    <FieldRef field="SumCounters"/>
                </Apply>
            </DerivedField>

            <!-- Prepare the format of the return variable -->
            <DerivedField name="PrepareReturnString" dataType="string" optype="categorical">
                <Apply function="Concat">
                    <Constant dataType="string">Key:</Constant>
                    <FieldRef field="SumCounters.key"/>
                    <Constant dataType="string">,Fraud:</Constant>
                    <FieldRef field="SumCounters.fraudcounter"/>
                    <Constant dataType="string">,Security:</Constant>
                    <FieldRef field="SumCounters.securitycounter"/>
		    <Constant dataType="string">,Investment:</Constant>
                    <FieldRef field="SumCounters.investmentCounter"/>
	            <Constant dataType="string">,Retirement:</Constant>
                    <FieldRef field="SumCounters.retirementCounter"/>
                </Apply>
            </DerivedField>
                
            <!-- Sets value to the return variable -->
            <DerivedField name="SetAndPrepareReturnString" dataType="boolean" optype="categorical">
                <Apply function="Put">
                    <Constant dataType="string">outputstr</Constant>
                    <FieldRef field="PrepareReturnString"/>
                </Apply>
            </DerivedField>

				

            <!-- Steps to take when the 'if' return a "false" -->
            <DerivedField name="FailurePath" dataType="boolean" optype="categorical">
                <Apply function="if">
                 	<!-- do something here more meaningful here.-->
                    <Constant dataType="boolean">false</Constant>
                    <Constant dataType="boolean">false</Constant>
                    <Constant dataType="boolean">false</Constant>
                </Apply>
            </DerivedField>
			
			
			
		
			
			<!-- Steps to take when the 'if' return a "true" -->
            <DerivedField name="SuccessPath" dataType="boolean" optype="categorical">
				<Apply function="and">
					<Apply function="if">
						<FieldRef field="IncrSetSumCounters"/>
						<Constant dataType="boolean">true</Constant>
						<Constant dataType="boolean">true</Constant>
					</Apply>
					<Apply function="if">
						<FieldRef field="SaveIncrSetSumCounters"/>
						<Constant dataType="boolean">true</Constant>
						<Constant dataType="boolean">true</Constant>
					</Apply>
					<Apply function="if">
						<FieldRef field="SetAndPrepareReturnString"/>
						<Constant dataType="boolean">true</Constant>
						<Constant dataType="boolean">true</Constant>
					</Apply>
                </Apply>
            </DerivedField>
			
			
			<!-- Banking Rule -->
			<DerivedField name="ScoreCheckBanking" dataType="boolean" optype="categorical">
                <Apply function="if">
                    <FieldRef field="CheckIfBanking"/>
                    <FieldRef field="SuccessPath"/> 
					<FieldRef field="FailurePath"/> 
				</Apply>
            </DerivedField>			
			
			
			
			

        </TransformationDictionary>

        <RuleSetModel modelName="DemoModel" functionName="classification" algorithmName="RuleSet">

            <MiningSchema>
			     <MiningField name="CheckIfSecurityMatch" usageType="supplementary"/>
				 <MiningField name="CheckIfBanking" usageType="supplementary"/>
				  <MiningField name="CheckIfFraudMatch" usageType="supplementary"/>
				 <MiningField name="CheckIfInvestmentMatch" usageType="supplementary"/> 
				<MiningField name="CheckIfRetirementMatch" usageType="supplementary"/> 
				<MiningField name="outputstr" usageType="supplementary"/>
			<!--	<MiningField name="CheckIfbankOfAmericaTermsArray" usageType="supplementary"/> 
				<MiningField name="CheckIfBarclays" usageType="supplementary"/> 
				<MiningField name="CheckIfCitiGroup" usageType="supplementary"/>
				<MiningField name="CheckIfTop20banks" usageType="supplementary"/>
				<MiningField name="CheckIfTop80banks" usageType="supplementary"/>				-->
				
				<MiningField name="predictedField" usageType="predicted"/>
            </MiningSchema>
			
            <RuleSet defaultScore="0">
                <RuleSelectionMethod criterion="firstHit"/>
                    <SimpleRule id="ScoreCheckRule" score="1b">
                        <SimplePredicate field="ScoreCheckBanking" operator="equal" value="true"/>
                    </SimpleRule>
            </RuleSet>
        </RuleSetModel>
</PMML>

